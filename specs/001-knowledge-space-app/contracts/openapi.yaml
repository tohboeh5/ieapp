openapi: 3.0.0
info:
  title: Knowledge Space App API
  version: 1.0.0
paths:
  /notes:
    get:
      summary: Retrieve a list of all notes
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
    post:
      summary: Create a new note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
  /notes/{note_id}:
    get:
      summary: Retrieve a single note by ID
      parameters:
        - in: path
          name: note_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    put:
      summary: Update an existing note by ID
      parameters:
        - in: path
          name: note_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    delete:
      summary: Delete a note by ID
      parameters:
        - in: path
          name: note_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found
  /notes/search:
    get:
      summary: Search notes by keyword
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Keyword to search in note titles and content
      responses:
        '200':
          description: A list of matching notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
  /notes/{note_id}/export:
    get:
      summary: Export a note to Markdown format
      parameters:
        - in: path
          name: note_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Markdown content of the note
          content:
            text/markdown:
              schema:
                type: string
        '404':
          description: Note not found
  /notes/import:
    post:
      summary: Import a note from Markdown format
      requestBody:
        required: true
        content:
          text/markdown:
            schema:
              type: string
          application/json:
            schema:
              type: object
              properties:
                title: 
                  type: string
                content: 
                  type: string
      responses:
        '201':
          description: Note imported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
        tags:
          type: array
          items:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
            maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - workspace_id
        - title
        - content
    NoteCreate:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
        tags:
          type: array
          items:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
            maxLength: 50
      required:
        - title
        - content
    NoteUpdate:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
        tags:
          type: array
          items:
            type: string
            pattern: '^[a-zA-Z0-9-]+$'
            maxLength: 50
    Workspace:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - name
    WorkspaceCreate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
        - name
